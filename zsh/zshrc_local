#!/usr/bin/env zsh

# XDebug PHP
alias phpxd='xd'
function xd {
    export XDEBUG_CONFIG="idekey=XDEBUG_VIESPEJO";
    php $*
    unset XDEBUG_CONFIG
}
alias tunnel_mysql_tresmadc19='echo '\''Connecting to tresmadc19...'\'';ssh -Nf tresmadc19 -L 3307:127.0.0.1:3306'
alias tunnel_mysql_tresbadc19='echo '\''Connecting to tresbadc19...'\'';ssh -Nf tresbadc19 -L 3309:127.0.0.1:3306'
alias tunnel_mysql_sesmavaltcv01='echo '\''Connecting to sesmavaltcv01...'\'';ssh -Nf vicente.espejo@sesmavaltcv01 -L 3310:127.0.0.1:3306'
alias tunnel_mysql_denver='echo '\''Connecting to denver...'\'';ssh -Nf vincente@denver -L 3308:127.0.0.1:3306'
alias tunnel_apache_denver='echo '\''Connecting to denver...'\'';ssh -Nf vincente@denver -L 172.19.115.171:9080:localhost:80'
alias tunnel_mysql_tresbadc19new='echo '\''Connecting to tresbadc19new...'\'';ssh -Nf devadmin@tresbadc19new -L 3311:127.0.0.1:3306'
alias tunnel_mysql_sitmivgcntct03='echo '\''Connecting to sitmivgcntct03...'\'';ssh -Nf admin_gocontact@sitmivgcntct03 -L 3312:127.0.0.1:3306'
alias tunnel_mysql_susl3vgcntct01='echo '\''Connecting to susl3vgcntct01...'\'';ssh -Nf localadmin@susl3vgcntct01 -L 3313:127.0.0.1:3306'
alias tunnel_mysql_sesmavweb01='echo '\''Connecting to sesmavweb01...'\'';ssh -Nf its32ve1@sesmavweb01 -L 3314:127.0.0.1:3306'
alias tunnel_mysql_tttserver='echo '\''Connecting to tttserver(SUSL3VACWEB01)...'\'';ssh -Nf tttserver -L 3315:127.0.0.1:3306'

# docker alias
alias docker="sudo docker"
alias docker-compose="sudo docker-compose"

# .local/bin to PATH
export PATH="/home/its32ve1/.local/bin:$PATH"

# Go Version Manager
# [ -s ~/.gvm/scripts/gvm ] && source ~/.gvm/scripts/gvm
# Go path
export PATH="/usr/local/go/bin:$HOME/go/bin:$PATH"

# Yarn
# export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Node from NVM (in order not to load NVM script)
# export PATH="/home/its32ve1/.nvm/versions/node/v16.16.0/bin:$PATH"
export PATH="/home/its32ve1/.nvm/versions/node/v20.9.0/bin:$PATH"
#export NVM_DIR="$HOME/.nvm" && \. "$NVM_DIR/nvm.sh" && \. "$NVM_DIR/bash_completion"
export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
alias nvm_load='\. "$NVM_DIR/nvm.sh" && \. "$NVM_DIR/bash_completion"'

# Rust
# . "$HOME/.cargo/env"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/its32ve1/google-cloud-sdk/path.zsh.inc' ]; then . '/home/its32ve1/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '/home/its32ve1/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/its32ve1/google-cloud-sdk/completion.zsh.inc'; fi

# TREX variables
# if [ -f '/home/its32ve1/code/trex/t-rex-env-zshrc.sh' ]; then . '/home/its32ve1/code/trex/t-rex-env-zshrc.sh'; fi

# EmployeeX variables
if [ -f '/home/its32ve1/code/employeex/env.sh' ]; then . '/home/its32ve1/code/employeex/env.sh'; fi

# temp before kubectl v1.26 after that it is not needed
export USE_GKE_GCLOUD_AUTH_PLUGIN=True


# I've swithed it to use gh extension above
# eval "$(github-copilot-cli alias -- "$0")"

# gh extension for copilot cli
# yay -Sy github-cli
# gh extension install github/gh-copilot 
alias copilot='gh copilot'
alias '?'='copilot explain'
alias '??'='copilot suggest -t shell'
alias 'git?'='copilot suggest -t git'
alias 'gh?'='copilot suggest -t gh'

# davinci-resolve
export PATH="$PATH:/opt/resolve/bin"

# test nvim
alias vim="XDG_CONFIG_HOME=~/.test-nvim/config XDG_DATA_HOME=~/.test-nvim/local/share XDG_STATE_HOME=~/.test-nvim/local/state nvim"
alias oldvim="nvim"
